name: Run Benchmarks

on:
  push:
    branches: [workflow]
  pull_request:
    branches: [workflow]
  schedule:
    - cron: '0 0 1 * *' # monthly
  workflow_dispatch:
    inputs:
      techs:
        description: 'Technologies to benchmark'
        required: false
        type: choice
        options:
          - all
          - go
          - bun
          - node
          - hono-bun
          - hono-node
        default: all

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  clean-reports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Delete all reports
        run: rm -rf reports/*
      - name: Save empty reports dir
        run: mkdir -p reports

  get-technologies:
    needs: clean-reports
    runs-on: ubuntu-latest
    outputs:
      technologies: ${{ steps.get-techs.outputs.technologies }}
    steps:
      - uses: actions/checkout@v4
      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
      - name: Get technologies from config
        id: get-techs
        run: |
          # Extract technology names from technologies.yaml
          techs=$(yq eval '.technologies | keys | .[] | select(. != "null")' config/technologies.yaml | jq -R -s -c 'split("\n")[:-1]')
          echo "technologies=$techs" >> $GITHUB_OUTPUT
          echo "Found technologies: $techs"

  benchmarks:
    needs: get-technologies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tech: ${{ fromJson(needs.get-technologies.outputs.technologies) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "${HOME}/.bun/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          cd orchestrator && go mod tidy
          cd ..
          node scripts/generate_test_data.js
          # Install wrk for HTTP benchmarking
          sudo apt-get update
          sudo apt-get install -y wrk
      - name: Build orchestrator
        run: |
          cd orchestrator && go build -o benchmark-cli
      - name: Run benchmarks for ${{ matrix.tech }}
        run: |
          ./orchestrator/benchmark-cli run --tech=${{ matrix.tech }} --test=all
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.tech }}
          path: reports/

  generate-html-report:
    needs: benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: reports-artifacts
      - name: Consolidate reports
        run: |
          mkdir -p reports
          find reports-artifacts -name "*.json" -exec cp {} reports/ \;
          ls -la reports/
      - name: Generate HTML Report
        run: |
          node scripts/generate-html-report.js
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: generate-html-report
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 